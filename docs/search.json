[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Personal Science Cookbook",
    "section": "",
    "text": "This book is intended to offer practical, step-by-step instructions to solve common problems when doing data analysis for Personal Science."
  },
  {
    "objectID": "index.html#prerequisites",
    "href": "index.html#prerequisites",
    "title": "Personal Science Cookbook",
    "section": "0.1 Prerequisites",
    "text": "0.1 Prerequisites\nWe’ll assume some basic tools.\n\nA spreadsheet like Microsoft Excel\nThe programming language R and the associated development environment RStudio\n\nA good introduction to R is Hands On Programming with R\n\n0.1.1 R Packages\nNearly all of the examples in this book will use the following packages, each of which is probably already familiar if you’ve done some basic R programming already.\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(kableExtra)\n\nIn addition, specific solutions may require other packages that will be identified in the instructions."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "2  Introduction",
    "section": "",
    "text": "In other words, like a hungry person in a kitchen full of ingredients, you need a cookbook of recipes that can explain in a step-by-step, repeatable manner, how to go from the raw data around you to some fully-baked insights. That’s the purpose of the Personal Science Cookbook. Each “recipe” is short and self-contained. Some are more complex than others, but none require any tools or knowledge beyond what is explained in the book."
  },
  {
    "objectID": "02-literature.html",
    "href": "02-literature.html",
    "title": "3  The Principles of Personal Science",
    "section": "",
    "text": "When the first microchips enabled desktop computers in the 1970s, people were unsure what to call them.\nThe word “mini-computer” was already taken, referring to a generation of computers that didn’t require entire rooms, so the techie engineers who confronted these new machines called them “microcomputers”, a moniker that lives on in the name for one of the first software companies of that generation, Microsoft.\nSome people called them “hobby computers”, because that seemed to be all they were good for. The most influential early gathering of people using them was called the “Homebrew Computer Club”. The term “desktop” was gaining traction, and inspired later generations that called them “laptops”, but then the most traditional of all computer companies introduced its first “IBM PC”, and suddenly the industry had a new term.\nIt was a “personal computer” because, for the first time, it was cheap enough and easy enough for a single individual to use it by him (or her) self. In contrast to all previous generations of computing, everything about the device was intended to be used by a single individual. Even if the computer was shared, only one person would use it at a time, and all design decisions reflected that: a single keyboard, monitor, one power switch. You didn’t need a team of people to set up and care for the device — it was out-of-the-box something that a single person could set up and use.\nIt’s easy to forget how transformative this was at the time. Computers until then were very expensive — many times more than the cost of a car or even a house. You had to be a large organization — a university, a business — to afford one, and even if somebody magically just gave one to you, you’d need a special place to keep it, with highly-trained technicians just to keep it running, and of course even more well-trained engineers and scientists to get it to do anything useful.\n\nA similar situation exists today in science. New discoveries are made in large institutions, by teams of high-trained people with access to large, expensive equipment. The discoveries are discussed and shared by specialists who are followed by a cadre of specialized interpreters — journalists, educators, clinicians —  who decipher the new scientific results into lay language and ultimately into face-to-face interaction with the public. Committees meet to discuss takeaways from the expensive and time-consuming research, reaching conclusions that are considered generally acceptable enough to result in new actionable treatments and suggestions for “normal people”.\nThis gap between the specialists and the general public, like the gap between mainframe computers and PCs, is eroding thanks to technology.\nActually that’s not quite true: the potential gap between specialists and the general public is eroding. But reality is still different. It’s as if PCs had been invented but no software.\nThe personal computer revolution was about more than simply cheaper devices. The hardware became useful after it spawned an entire industry of dedicated software makers,  educational experts, consultants and systems integrators,\nProfessional science\nWe all think science is great…\nbut what do people mean when they say “science”? 1. Wonder  (photos of stars, micrographs, etc.) 2. Technology (photos of roman arch, integrated circuit, moon landing) 3. A way of thinking (photos of “amateur” scientists)\nIt’s tempting to assume that the scientific way of thinking is obvious, and maybe even obviously the only way to think rigorously but that’s not really true.\nAlternatives to the scientific way of thinking: recipes\nMy definition of science: a predisposition to the assumption that you’re wrong, a nasty mischievous inclination to disbelieve things you can’t prove.\nA core scientific skill is curiosity.  Always ask “what if…”  thinking in hypotheticals\nReligion seems like a classic example of unscientific thinking, but even that I’ll challenge. What if you’re wrong?  Is there a way to experiment, test it?\nScience is:\n\nCuriosity\nSkepticism : an unending belief that you are wrong\n\nLow interest in credentials … just because you are “certified” doesn’t mean you know any more than I do.\n\nBias toward experiments\n\nSee Roberts (2004) for examples.\n\n\n\n\nRoberts, Seth. 2004. “Self-Experimentation as a Source of New Ideas: Ten Examples about Sleep, Mood, Health, and Weight.” http://www.escholarship.org/uc/item/2xc2h866."
  },
  {
    "objectID": "get-started.html",
    "href": "get-started.html",
    "title": "4  Getting Started",
    "section": "",
    "text": "Let’s say you are suffering from unexplained headaches that appear somewhat randomly. You suspect they may be associated with something you eat, but you’re not sure, so you’ve been tracking 14 weeks (98 days) worth of your own data in a spreadsheet that looks like this:\n\nlibrary(tidyverse, quietly=TRUE)\nlibrary(lubridate, quietly=TRUE)\n\n\nset.seed(1984)\n\nx <- tibble(date=seq(from = today()-weeks(14),\n                     by = \"1 day\", length.out = 7*14),\n            headache = sample(c(TRUE,FALSE), 7*14,\n                              prob = c(.05,.95),\n                              replace = TRUE))\n\nknitr::kable( head(x) ) %>% kableExtra::kable_styling()\n\n\n\n \n  \n    date \n    headache \n  \n \n\n  \n    2022-06-07 \n    FALSE \n  \n  \n    2022-06-08 \n    FALSE \n  \n  \n    2022-06-09 \n    FALSE \n  \n  \n    2022-06-10 \n    FALSE \n  \n  \n    2022-06-11 \n    FALSE \n  \n  \n    2022-06-12 \n    FALSE \n  \n\n\n\n\nwrite_csv(x,\"headache-days.csv\")\n\nYou can download a copy of this file here\nIt’s easy to add a few more variables (columns) to the dataframe: (download)\n\nz <- function(x){\nm = NULL\nfor(i in 1:14){\n  m = c(c(rep(0,6),\n              floor(runif(1,min=0,max=3))),\n        m)\n}\n\nm\n}\nx <- tibble(date=seq(from = today()-weeks(14),\n                     by = \"1 day\", length.out = 7*14),\n            headache = sample(c(TRUE,FALSE), 7*14,\n                              prob = c(.05,.95),\n                              replace = TRUE),\n            icecream = sample(c(TRUE,FALSE), 7*14,\n                              prob = c(.10,.90),\n                              replace = TRUE),\n            z = runif(7*14, min = -2.5, max = .5) + 8,\n            wine = z(0))\n\nknitr::kable( head(x,10), digits = 2) %>%\n  kableExtra::kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\"))\n\n\n\n \n  \n    date \n    headache \n    icecream \n    z \n    wine \n  \n \n\n  \n    2022-06-07 \n    FALSE \n    TRUE \n    7.56 \n    0 \n  \n  \n    2022-06-08 \n    FALSE \n    FALSE \n    7.38 \n    0 \n  \n  \n    2022-06-09 \n    FALSE \n    FALSE \n    5.51 \n    0 \n  \n  \n    2022-06-10 \n    FALSE \n    TRUE \n    7.60 \n    0 \n  \n  \n    2022-06-11 \n    FALSE \n    FALSE \n    8.36 \n    0 \n  \n  \n    2022-06-12 \n    FALSE \n    FALSE \n    6.92 \n    0 \n  \n  \n    2022-06-13 \n    FALSE \n    FALSE \n    6.32 \n    0 \n  \n  \n    2022-06-14 \n    FALSE \n    FALSE \n    7.52 \n    0 \n  \n  \n    2022-06-15 \n    FALSE \n    FALSE \n    7.95 \n    0 \n  \n  \n    2022-06-16 \n    FALSE \n    FALSE \n    6.99 \n    0 \n  \n\n\n\n\nwrite_csv(x,\"headache-variables.csv\")\n\n\nheadache: a day when I have a headache\nicecream: did I eat ice cream that day?\nwine: Number of glasses of wine I drank.\nz: Number of hours I slept that day."
  },
  {
    "objectID": "method.html",
    "href": "method.html",
    "title": "5  Methods",
    "section": "",
    "text": "Self-collected data is almost always best represented by a table of the variables you want to study and the values that you collected for each of those variables. The most common type of table is a spreadsheet, a specific form of which in Personal Science we refer to as a data table or a data frame. Abbreviated “dataframe” or often just “df”, it’s a table of values and variables that always has the same form:\n\ncolumns are variables: the parameters you want to study\nrows are observations: each incident of data you collected.\n\nIt’s important to get in the habit of this row/column approach to data collection because, as you’ll see, all of our tools assume that data will come in a dataframe format."
  },
  {
    "objectID": "method.html#rolling-average",
    "href": "method.html#rolling-average",
    "title": "5  Methods",
    "section": "5.2 Rolling average",
    "text": "5.2 Rolling average\nProblem You want to take the rolling 7-day average of a series of numbers.\n\nlibrary(tidyverse)\nheadache_df <- readr::read_csv(\"headache-variables.csv\")\nheadache_df %>% head() %>% knitr::kable()\n\n\n\n\ndate\nheadache\nicecream\nz\nwine\n\n\n\n\n2022-06-07\nFALSE\nTRUE\n7.557071\n0\n\n\n2022-06-08\nFALSE\nFALSE\n7.379434\n0\n\n\n2022-06-09\nFALSE\nFALSE\n5.512368\n0\n\n\n2022-06-10\nFALSE\nTRUE\n7.600135\n0\n\n\n2022-06-11\nFALSE\nFALSE\n8.362155\n0\n\n\n2022-06-12\nFALSE\nFALSE\n6.924651\n0\n\n\n\n\n\nSolution use the rolling() functions in package zoo:\n\nlibrary(zoo)\n\nheadache_df %>% \n    mutate(sleep7A = rollapply(z,\n                               7, \n                               function(x) {x = mean(x,na.rm = TRUE)},\n                               align = 'right',\n                               fill = NA)) %>% \n  tail() %>% knitr::kable()\n\n\n\n\ndate\nheadache\nicecream\nz\nwine\nsleep7A\n\n\n\n\n2022-09-07\nFALSE\nFALSE\n8.120216\n0\n6.899738\n\n\n2022-09-08\nFALSE\nFALSE\n5.668099\n0\n6.738935\n\n\n2022-09-09\nFALSE\nFALSE\n8.093531\n0\n7.094138\n\n\n2022-09-10\nTRUE\nFALSE\n7.679254\n0\n7.308210\n\n\n2022-09-11\nFALSE\nFALSE\n7.346326\n0\n7.283955\n\n\n2022-09-12\nFALSE\nFALSE\n6.019567\n2\n7.321820"
  },
  {
    "objectID": "04-application.html",
    "href": "04-application.html",
    "title": "6  Applications",
    "section": "",
    "text": "Some significant applications are demonstrated in this chapter.\nLoad the data we created in our Chapter 4 example.\nWith my 14 weeks of data, we can do a few basic calculations:\nHow frequent are my headaches? Simply total the number of headaches and divide by number of days:"
  },
  {
    "objectID": "04-application.html#hypothesis",
    "href": "04-application.html#hypothesis",
    "title": "6  Applications",
    "section": "6.1 Hypothesis",
    "text": "6.1 Hypothesis\nWith the data collected and in a nice dataframe format, we can start to ask what might be driving the headaches. One of the first suspected culprits might be something that I eat.\nBased on the data collected so far, can I make any guesses about what might be driving my headaches?\nThe most obvious place to check is whether I see any patterns on the days when I have headaches. Let’s filter for headache days only:\n\nx %>% filter(headache)  %>% kableExtra::kable() %>% \n  kableExtra::kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\"))\n\n\n\n \n  \n    date \n    headache \n    icecream \n    z \n    wine \n  \n \n\n  \n    2022-06-18 \n    TRUE \n    TRUE \n    8.478644 \n    0 \n  \n  \n    2022-07-03 \n    TRUE \n    FALSE \n    6.880779 \n    0 \n  \n  \n    2022-07-10 \n    TRUE \n    FALSE \n    6.909671 \n    0 \n  \n  \n    2022-07-28 \n    TRUE \n    FALSE \n    7.278277 \n    0 \n  \n  \n    2022-08-05 \n    TRUE \n    FALSE \n    7.797994 \n    0 \n  \n  \n    2022-08-21 \n    TRUE \n    TRUE \n    8.385846 \n    0 \n  \n  \n    2022-08-24 \n    TRUE \n    FALSE \n    5.849701 \n    0 \n  \n  \n    2022-09-10 \n    TRUE \n    FALSE \n    7.679254 \n    0 \n  \n\n\n\n\n\nBut maybe the headache takes a day or two to kick in. We can divide the data by week and see if we can spot any patterns in headache frequency:\n\nx %>% group_by(week = ntile(date,7)) %>% \n  summarise(headaches = sum(headache),\n            alcohol = sum(wine),\n            icecream = sum(icecream))  %>% kableExtra::kable() %>% \n  kableExtra::kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\"))\n\n\n\n \n  \n    week \n    headaches \n    alcohol \n    icecream \n  \n \n\n  \n    1 \n    1 \n    0 \n    4 \n  \n  \n    2 \n    1 \n    1 \n    0 \n  \n  \n    3 \n    1 \n    3 \n    0 \n  \n  \n    4 \n    1 \n    2 \n    1 \n  \n  \n    5 \n    1 \n    4 \n    1 \n  \n  \n    6 \n    2 \n    3 \n    3 \n  \n  \n    7 \n    1 \n    3 \n    0 \n  \n\n\n\n\n\nBuy simply eye-balling the data this way, you might see a pattern. For example, you might spot a week or two with an unusually large number of headaches and notice those weeks are accompanied by an unusually large consumption of some particular food.\nBut how do you know you’re not just guessing? What looks like a pattern might be a coincidence. To find out with more certainty, we will apply some statistics."
  },
  {
    "objectID": "04-application.html#t-testing",
    "href": "04-application.html#t-testing",
    "title": "6  Applications",
    "section": "6.2 T-Testing",
    "text": "6.2 T-Testing\nHint: an Excel version of this exercise is in Section 8.1 .\nThe simplest test is called a “T Test”. This is a formula that can compare two equal-sized lists of numbers and return the probability that any differences between the two are the result of chance.\nWhat are the chances that the number of headaches per week is related to the amount of ice cream I eat per week?\nIf there were a relationship between ice cream and headaches each week, I’d expect that over the weeks in this period, the total number of headaches and the total number of ice cream days should be roughly equal.\n\nx_week <- x %>% group_by(week = ntile(date,7)) %>% \n  summarise(headaches = sum(headache),\n            alcohol = sum(wine),\n            icecream = sum(icecream)) \nx_week %>% kableExtra::kable() %>%\n  kableExtra::kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\")) \n\n\n\n \n  \n    week \n    headaches \n    alcohol \n    icecream \n  \n \n\n  \n    1 \n    1 \n    0 \n    4 \n  \n  \n    2 \n    1 \n    1 \n    0 \n  \n  \n    3 \n    1 \n    3 \n    0 \n  \n  \n    4 \n    1 \n    2 \n    1 \n  \n  \n    5 \n    1 \n    4 \n    1 \n  \n  \n    6 \n    2 \n    3 \n    3 \n  \n  \n    7 \n    1 \n    3 \n    0 \n  \n\n\n\n\nwith(x_week, t.test(headaches,icecream))[[\"p.value\"]]\n\n[1] 0.8254265\n\n\nBy convention, a p-value less than 0.05 (that is, less than 5\\%) is considered statistically significant. While this is not a hard and fast rule, it’s often a good place to start. A p-value greater than this is almost certainly due to chance."
  },
  {
    "objectID": "04-application.html#data-visualization",
    "href": "04-application.html#data-visualization",
    "title": "6  Applications",
    "section": "6.3 Data visualization",
    "text": "6.3 Data visualization\nThe first step in a more sophisticated analysis is to plot the data to see if we can spot any particular patterns.\n\nx_week %>% pivot_longer(names_to = \"activity\",\n                        values_to = \"amount\",\n                        cols = alcohol:icecream ) %>% \n  ggplot(aes(x=week,y=headaches)) +\n  geom_bar(aes(x=week,y=amount, fill = activity),\n           position = \"dodge\",\n           stat = \"identity\") +\n  geom_line(aes(x=week,y=headaches))"
  },
  {
    "objectID": "04-application.html#example-two",
    "href": "04-application.html#example-two",
    "title": "6  Applications",
    "section": "6.4 Example two",
    "text": "6.4 Example two"
  },
  {
    "objectID": "05-summary.html",
    "href": "05-summary.html",
    "title": "7  Final Words",
    "section": "",
    "text": "Download a copy in PDF or ePub."
  },
  {
    "objectID": "Excelttest.html",
    "href": "Excelttest.html",
    "title": "8  Appendix: Excel Examples",
    "section": "",
    "text": "Problem\nYou tried an intervention and want to see if it worked. How likely is it that the results were chance?\nSolution\nOne of the simplest tests is a “T-Test”, sometimes called a “Student T Test”.\nStatisticians use the concept of P Value to discuss the how often a result might appear to be significant even when it’s not. While this crude measure doesn’t describe all the ways something might happen due to chance, generally the lower the P Value, the better. Professional scientists, especially those who understand statistics, will get touchy if you claim a result based purely on P Values, but for Personal Science purposes, it’s a good start. There is no “correct” cutoff value that can determine the likelihood that something is due to chance alone, but traditionally people assume that anything under 0.05 deserves a closer look.\nHere’s an example for how to do this in Excel.\nSuppose you’d like to know if taking a melotonin supplement will help you sleep longer. You’ve measured your daily sleep, taking the supplements on some days (the “intervention”) and not on others (“control”).\nA simple spreadsheet might look like this:\n\nTrack your sleep under two columns: one for nights when you took the supplement, and the other for nights you didn’t.\nThe built-in Excel statistical function T.TEST will calculate the P-Value when you give it two ranges, the “intervention” (nights we took melotonin) and the “control” (nights without).\nSee the screenshot for the exact formula in this case:\n=T.TEST(array1,array2,tails,type)\nEnter a 1 for tails (because we’re only interested in one measurement, sleep) and a 2 for type (because in this case our samples are not of the same length).\nThe P Value in this example, 0.24, is above 0.05 and therefore we will assume that any difference in sleep between the nights is due to pure chance."
  },
  {
    "objectID": "06-references.html",
    "href": "06-references.html",
    "title": "9  References",
    "section": "",
    "text": "Roberts, Seth. 2004. “Self-Experimentation as a Source of New\nIdeas: Ten Examples about Sleep, Mood, Health, and\nWeight.” http://www.escholarship.org/uc/item/2xc2h866."
  },
  {
    "objectID": "playN-of-1.html",
    "href": "playN-of-1.html",
    "title": "7  Averages vs n-of-1",
    "section": "",
    "text": "Consider the following case:\n1000 people took Vitamin D for 6 months. We measured their Vitamin D levels before and after, and sure enough: the average levels *after* are higher than *before*.\nMore specifically, let’s say the average at the beginning of the study is 30 mg/nL (widely considered the absolute )\n\n\n\n\nstudy <- tibble(subject=1:N,\n                vitamind=rnorm(n=N,\n                               mean=MEAN_VITAMIN_D,\n                               sd=MEAN_VITAMIN_D\n                )\n                ) %>% \n  transmute(subject, vitamind=if_else(vitamind<0, 0,vitamind))\n\nstudy_plot <- study %>% ggplot(aes(x=subject,y=vitamind)) + \n  geom_point() +\n  geom_smooth(method= lm, formula= y ~ x, color=\"red\") + \n  labs(x=\"Subject\", y = \"Vitamin D (ng/mL)\", title = \"Vitamin D levels in all subjects\")\n\nstudy_plot\n\n\n\n\nRed line indicates the average slope of the points\n\n\n\n\nNote that, although the average level is about 30 mg/mL, there are numerous subjects whose levels are considerable above and below that.\n\nmaxd <- max(study$vitamind)\nstudy_plot + \n  geom_rect(xmin=0,ymin=0,xmax=N, ymax=MEAN_VITAMIN_D - sd(1:MEAN_VITAMIN_D),\n            fill = \"lightblue\",\n            alpha = 0.007) +\n    geom_rect(xmin=0,ymin=MEAN_VITAMIN_D + sd(1:MEAN_VITAMIN_D),xmax=N, ymax=maxd,\n            fill = \"lightblue\",\n            alpha = 0.007) \n\n\n\n\nShaded area represents points more than a standard deviation outlier."
  }
]