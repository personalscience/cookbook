[["index.html", "Personal Science Cookbook Chapter 1 Prerequisites 1.1 Assumptions 1.2 How to edit this book", " Personal Science Cookbook Friends of Personal Science 2022-06-14 Chapter 1 Prerequisites 1.1 Assumptions We’ll assume some basic tools. A spreadsheet like Microsoft Excel The programming language R and the associated development environment RStudio A good introduction to R is Hands On Programming with R library(tidyverse) library(lubridate) library(kableExtra) 1.2 How to edit this book This is book written in Markdown. You can use anything that Pandoc’s Markdown supports, e.g., a math equation \\(a^2 + b^2 = c^2\\). Remember each Rmd file contains one and only one chapter, and a chapter is defined by the first-level heading #. To compile this example to PDF, you need XeLaTeX. We recommend TinyTeX (which includes XeLaTeX): https://yihui.org/tinytex/. "],["intro.html", "Chapter 2 Introduction", " Chapter 2 Introduction There’s something you want to understand, probably about yourself, maybe something health- or wellness-related, but it might be something about the world around you. The point is that it’s a question of deep interest to you, though unlikely in its current form to be of enough interest to involve professionals. You’d like to apply the principles of science — hypothesis, experiment, analysis — but you don’t know enough of the mechanics to get started. In other words, like a hungry person in a kitchen full of ingredients, you need a cookbook of recipes that can explain in a step-by-step, repeatable manner, how to go from the raw data around you to some fully-baked insights. That’s the purpose of the Personal Science Cookbook. Each “recipe” is short and self-contained. Some are more complex than others, but none require any tools or knowledge beyond what is explained in the book. "],["the-principles-of-personal-science.html", "Chapter 3 The Principles of Personal Science", " Chapter 3 The Principles of Personal Science Personal Science is about empowering normal people to use the tools of science to help themselves in their daily lives. When the first microchips enabled desktop computers in the 1970s, people were unsure what to call them. The word “mini-computer” was already taken, referring to a generation of computers that didn’t require entire rooms, so the techie engineers who confronted these new machines called them “microcomputers”, a moniker that lives on in the name for one of the first software companies of that generation, Microsoft. Some people called them “hobby computers”, because that seemed to be all they were good for. The most influential early gathering of people using them was called the “Homebrew Computer Club”. The term “desktop” was gaining traction, and inspired later generations that called them “laptops”, but then the most traditional of all computer companies introduced its first “IBM PC”, and suddenly the industry had a new term. It was a “personal computer” because, for the first time, it was cheap enough and easy enough for a single individual to use it by him (or her) self. In contrast to all previous generations of computing, everything about the device was intended to be used by a single individual. Even if the computer was shared, only one person would use it at a time, and all design decisions reflected that: a single keyboard, monitor, one power switch. You didn’t need a team of people to set up and care for the device — it was out-of-the-box something that a single person could set up and use. It’s easy to forget how transformative this was at the time. Computers until then were very expensive — many times more than the cost of a car or even a house. You had to be a large organization — a university, a business — to afford one, and even if somebody magically just gave one to you, you’d need a special place to keep it, with highly-trained technicians just to keep it running, and of course even more well-trained engineers and scientists to get it to do anything useful. A similar situation exists today in science. New discoveries are made in large institutions, by teams of high-trained people with access to large, expensive equipment. The discoveries are discussed and shared by specialists who are followed by a cadre of specialized interpreters — journalists, educators, clinicians —  who decipher the new scientific results into lay language and ultimately into face-to-face interaction with the public. Committees meet to discuss takeaways from the expensive and time-consuming research, reaching conclusions that are considered generally acceptable enough to result in new actionable treatments and suggestions for “normal people”. This gap between the specialists and the general public, like the gap between mainframe computers and PCs, is eroding thanks to technology. Actually that’s not quite true: the potential gap between specialists and the general public is eroding. But reality is still different. It’s as if PCs had been invented but no software. The personal computer revolution was about more than simply cheaper devices. The hardware became useful after it spawned an entire industry of dedicated software makers,  educational experts, consultants and systems integrators, Professional science We all think science is great… but what do people mean when they say “science”? 1. Wonder  (photos of stars, micrographs, etc.) 2. Technology (photos of roman arch, integrated circuit, moon landing) 3. A way of thinking (photos of “amateur” scientists) It’s tempting to assume that the scientific way of thinking is obvious, and maybe even obviously the only way to think rigorously but that’s not really true. Alternatives to the scientific way of thinking: recipes My definition of science: a predisposition to the assumption that you’re wrong, a nasty mischievous inclination to disbelieve things you can’t prove. A core scientific skill is curiosity.  Always ask “what if…”  thinking in hypotheticals Religion seems like a classic example of unscientific thinking, but even that I’ll challenge. What if you’re wrong?  Is there a way to experiment, test it? Science is: Curiosity Skepticism : an unending belief that you are wrong Low interest in credentials … just because you are “certified” doesn’t mean you know any more than I do. Bias toward experiments See Roberts (2004) for examples. References "],["methods.html", "Chapter 4 Methods 4.1 What is a dataframe? 4.2 Is it chance? T-Test 4.3 Rolling average", " Chapter 4 Methods 4.1 What is a dataframe? Self-collected data is almost always best represented by a table of the variables you want to study and the values that you collected for each of those variables. The most common type of table is a spreadsheet, a specific form of which in Personal Science we refer to as a data table or a data frame. Abbreviated “dataframe” or often just “df”, it’s a table of values and variables that always has the same form: columns are variables: the parameters you want to study rows are observations: each incident of data you collected. It’s important to get in the habit of this row/column approach to data collection because, as you’ll see, all of our tools assume that data will come in a dataframe format. 4.2 Is it chance? T-Test Problem You tried an intervention and want to see if it worked. How likely is it that the results were chance? Solution One of the simplest tests is a “T-Test”, sometimes called a “Student T Test”. Statisticians use the concept of P Value to discuss the how often a result might appear to be significant even when it’s not. While this crude measure doesn’t describe all the ways something might happen due to chance, generally the lower the P Value, the better. Professional scientists, especially those who understand statistics, will get touchy if you claim a result based purely on P Values, but for Personal Science purposes, it’s a good start. There is no “correct” cutoff value that can determine the likelihood that something is due to chance alone, but traditionally people assume that anything under 0.05 deserves a closer look. Here’s an example for how to do this in Excel. Suppose you’d like to know if taking a melotonin supplement will help you sleep longer. You’ve measured your daily sleep, taking the supplements on some days (the “intervention”) and not on others (“control”). A simple spreadsheet might look like this: Track your sleep under two columns: one for nights when you took the supplement, and the other for nights you didn’t. The built-in Excel statistical function T.TEST will calculate the P-Value when you give it two ranges, the “intervention” (nights we took melotonin) and the “control” (nights without). See the screenshot for the exact formula in this case: =T.TEST(array1,array2,tails,type) Enter a 1 for tails (because we’re only interested in one measurement, sleep) and a 2 for type (because in this case our samples are not of the same length). The P Value in this example, 0.24, is above 0.05 and therefore we will assume that any difference in sleep between the nights is due to pure chance. 4.3 Rolling average Problem You want to take the rolling 7-day average of a series of numbers. headache_df &lt;- read_csv(&quot;headache-variables.csv&quot;) headache_df %&gt;% head() %&gt;% knitr::kable() date headache icecream z wine 2022-03-08 FALSE FALSE 7.352620 0 2022-03-09 FALSE FALSE 8.330984 0 2022-03-10 FALSE FALSE 7.542562 0 2022-03-11 FALSE FALSE 8.490124 0 2022-03-12 FALSE FALSE 8.133232 0 2022-03-13 FALSE FALSE 7.026528 0 Solution use the rolling() functions in package zoo: library(zoo) ## ## Attaching package: &#39;zoo&#39; ## The following objects are masked from &#39;package:base&#39;: ## ## as.Date, as.Date.numeric headache_df %&gt;% mutate(sleep7A = rollapply(z, 7, function(x) {x = mean(x,na.rm = TRUE)}, align = &#39;right&#39;, fill = NA)) %&gt;% tail() %&gt;% knitr::kable() date headache icecream z wine sleep7A 2022-06-08 FALSE FALSE 6.727889 0 7.325807 2022-06-09 FALSE TRUE 5.706245 0 7.040659 2022-06-10 FALSE FALSE 6.269520 0 6.854206 2022-06-11 FALSE FALSE 7.015939 0 6.882075 2022-06-12 FALSE FALSE 7.982111 0 7.149014 2022-06-13 FALSE FALSE 6.803117 0 6.957848 "],["applications.html", "Chapter 5 Applications 5.1 Hypothesis 5.2 T-Testing 5.3 Example one 5.4 Example two", " Chapter 5 Applications Some significant applications are demonstrated in this chapter. Let’s say you are suffering from unexplained headaches that appear somewhat randomly. You suspect they may be associated with something you eat, but you’re not sure, so you’ve been tracking 14 weeks (98 days) worth of your own data in a spreadsheet that looks like this: x &lt;- tibble(date=seq(from = today()-weeks(14), by = &quot;1 day&quot;, length.out = 7*14), headache = sample(c(TRUE,FALSE), 7*14, prob = c(.05,.95), replace = TRUE)) knitr::kable( head(x) ) %&gt;% kableExtra::kable_styling() date headache 2022-03-08 FALSE 2022-03-09 FALSE 2022-03-10 FALSE 2022-03-11 FALSE 2022-03-12 FALSE 2022-03-13 FALSE write_csv(x,&quot;headache-days.csv&quot;) You can download a copy of this file here With my 14 weeks of data, we can do a few basic calculations: How frequent are my headaches? sum(x$headache) / length(x$headache) [1] 0.04081633 5.1 Hypothesis With the data collected and in a nice dataframe format, we can start to wonder what might be driving the headaches, and one of the first culprits to suspect might be something that I eat. It’s easy to add a few more variables (columns) to the dataframe: (download) z &lt;- function(x){ m = NULL for(i in 1:14){ m = c(c(rep(0,6), floor(runif(1,min=0,max=3))), m) } m } x &lt;- tibble(date=seq(from = today()-weeks(14), by = &quot;1 day&quot;, length.out = 7*14), headache = sample(c(TRUE,FALSE), 7*14, prob = c(.05,.95), replace = TRUE), icecream = sample(c(TRUE,FALSE), 7*14, prob = c(.10,.90), replace = TRUE), z = runif(7*14, min = -2.5, max = .5) + 8, wine = z(0)) knitr::kable( head(x,10), digits = 2) %&gt;% kableExtra::kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;)) date headache icecream z wine 2022-03-08 FALSE FALSE 7.35 0 2022-03-09 FALSE FALSE 8.33 0 2022-03-10 FALSE FALSE 7.54 0 2022-03-11 FALSE FALSE 8.49 0 2022-03-12 FALSE FALSE 8.13 0 2022-03-13 FALSE FALSE 7.03 0 2022-03-14 FALSE FALSE 8.10 1 2022-03-15 FALSE FALSE 5.87 0 2022-03-16 FALSE FALSE 6.77 0 2022-03-17 TRUE TRUE 7.45 0 write_csv(x,&quot;headache-variables.csv&quot;) headache: a day when I have a headache icecream: did I eat ice cream that day? wine: Number of glasses of wine I drank. z: Number of hours I slept that day. Based on the data collected so far, can I make any guesses about what might be driving my headaches? The most obvious place to check is whether I see any patterns on the days when I have headaches. Let’s filter for headache days only: x %&gt;% filter(headache) %&gt;% kable() %&gt;% kableExtra::kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;)) date headache icecream z wine 2022-03-17 TRUE TRUE 7.450570 0 2022-03-31 TRUE FALSE 6.661585 0 2022-05-12 TRUE FALSE 6.776721 0 2022-06-01 TRUE FALSE 8.435139 0 But maybe the headache takes a day or two to kick in. We can divide the data by week and see if we can spot any patterns in headache frequency: x %&gt;% group_by(week = ntile(date,7)) %&gt;% summarise(headaches = sum(headache), alcohol = sum(wine), icecream = sum(icecream)) %&gt;% kable() %&gt;% kableExtra::kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;)) week headaches alcohol icecream 1 1 2 1 2 1 2 0 3 0 0 1 4 0 2 2 5 1 2 1 6 0 3 0 7 1 2 1 You might see a pattern at this point 5.2 T-Testing What are the chances that the number of headaches per week is related to the amount of ice cream I eat per week? If there were a relationship between ice cream and headaches each week, I’d expect that over the weeks in this period, the total number of headaches and the total number of ice cream days should be roughly equal. x_week &lt;- x %&gt;% group_by(week = ntile(date,7)) %&gt;% summarise(headaches = sum(headache), alcohol = sum(wine), icecream = sum(icecream)) x_week %&gt;% kable() %&gt;% kableExtra::kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;)) week headaches alcohol icecream 1 1 2 1 2 1 2 0 3 0 0 1 4 0 2 2 5 1 2 1 6 0 3 0 7 1 2 1 with(x_week, t.test(headaches,icecream)) ## ## Welch Two Sample t-test ## ## data: headaches and icecream ## t = -0.86603, df = 11.294, p-value = 0.4045 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## -1.009551 0.438122 ## sample estimates: ## mean of x mean of y ## 0.5714286 0.8571429 5.3 Example one 5.4 Example two "],["final-words.html", "Chapter 6 Final Words", " Chapter 6 Final Words We have finished a nice book. "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
